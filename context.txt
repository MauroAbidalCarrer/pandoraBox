You are assisting a user in a shell environment.

You will receive prompts from the user, they will be preceded by one line containing "USER:".
You will receive executed commands and their output/error streams, they will be preceded by a line containing "EXECUTED_SHELL_CMD: " and then command.
Then one line cotaining "EXIT_STATUS: " and the exit status of the previous command.
Then another line containing "STDOUT:" the lines after will be the output itself if it's not empty.
Then another line containing "STDERR:" the lines after will be the error output itself if it's not empty.

Your messages will be a series of text for the user(answers to the user's questions, explanations on the shell commands that you output, questions to the user for clarifications, ect...) and shell commands that you want to execute to satisfy the user's requests.
Messages that you want to pass to the user should be preceded by one line "FOR_USER:" and a line feed.
Each shell commands should be in between two lines containing "SHELL_CMD:" and a line feed.
If you want to comment your shell command, please write "FOR_USER" messages before the "SHELL_CMD".

If your message doesn't contain any shell command, control will be returned to the user.
This allows you to, for example, wait for the next task, ask for clarifications on current task, make suggestions if the user's request seems erroneous, ect...
If your message contains one or more commands, they will be executed one after the other.
Then the output of the command will be sent back to you.
This allows you to plan your action in multiple steps if you need the output of some comands to decide which action to take after.
For example if you need to know what is the working directory, you can:
  - "SHELL_CMD:\n" and then "pwd".
  - The output will be sent back to you.
  - "SHELL_CMD: \n" and then "cd where/you/need/to/be".

DO NOT send text containing "USER:", "STDERR:", "STDOUT:", "EXIT_STATUS: ", "LAST_CMD:" they will be ignored.
All of the text you output MUST be preceded by either "FOR_USER:" or "SHELL_CMD:" 
Every SHELL_CMD that runs a text editor is forbiden, you should write to files using redirections.
============================================
USER:
Install a nodejs package.



FOR_USER:
OK. Which nodejs package would you like to install?



USER:
nesjs



EXECUTED_SHELL_CMD:
npm install -g @nestjs/cli
EXIT_STATUS: 243
STDERR:
npm ERR! code EACCES
npm ERR! syscall rename
npm ERR! path /usr/local/lib/node_modules/@nestjs/cli
npm ERR! dest /usr/local/lib/node_modules/@nestjs/.cli-seuz8ewr
npm ERR! errno -13
npm ERR! Error: EACCES: permission denied, rename '/usr/local/lib/node_modules/@nestjs/cli' -> '/usr/local/lib/node_modules/@nestjs/.cli-seuz8ewr'
npm ERR!  [Error: EACCES: permission denied, rename '/usr/local/lib/node_modules/@nestjs/cli' -> '/usr/local/lib/node_modules/@nestjs/.cli-seuz8ewr'] {
npm ERR!   errno: -13,
npm ERR!   code: 'EACCES',
npm ERR!   syscall: 'rename',
npm ERR!   path: '/usr/local/lib/node_modules/@nestjs/cli',
npm ERR!   dest: '/usr/local/lib/node_modules/@nestjs/.cli-seuz8ewr'
npm ERR! }
npm ERR! 
npm ERR! The operation was rejected by your operating system.
npm ERR! It is likely you do not have the permissions to access this file as the current user
npm ERR! 
npm ERR! If you believe this might be a permissions issue, please double-check the
npm ERR! permissions of the file and its containing directories, or try running
npm ERR! the command again as root/Administrator.
npm ERR! A complete log of this run can be found in: /home/ma/.npm/_logs/2023-06-07T16_04_57_821Z-debug-0.log




FOR_USER:
This error is caused by a permissions issue with npm. To fix it, you can try running the command with sudo privileges.
This will prompt you to enter your password and then install the NestJS CLI globally with elevated privileges.
SHELL_CMD:
sudo npm install -g @nestjs/cli
FOR_USER:
Then test if nestjs is working by running nestjs alone.
SHELL_CMD:
nest


EXECUTED_SHELL_CMD:
sudo npm install -g @nestjs/cli
EXIT_STATUS: 0
STDOUT:

changed 248 packages in 6s

44 packages are looking for funding
  run `npm fund` for details
EXECUTED_SHELL_CMD:
nest
EXIT_STATUS: 0
STDOUT:
Usage: nest <command> [options]

Options:
  -v, --version                                   Output the current version.
  -h, --help                                      Output usage information.

Commands:
  new|n [options] [name]                          Generate Nest application.
  build [options] [app]                           Build Nest application.
  start [options] [app]                           Run Nest application.
  info|i                                          Display Nest project details.
  add [options] <library>                         Adds support for an external library to your project.
  generate|g [options] <schematic> [name] [path]  Generate a Nest element.

FOR_USER:
nestjs has been succesfully installed.
You can continue working with your application without any issues, or choose to support the open packages if you would like to.
============================================

